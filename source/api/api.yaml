openapi: 3.0.0
info:
  title: Pegasus API
  version: "1.3"
  description: API to fetch personal information
  contact:
    name: Sai Kiran
    email: saikiranreddy.saikiran@gmail.com

servers:
  - url: 'https://localhost:6060'
    description: Localhost Base URL for the API
  - url: 'https://walrus-app-lrhok.ondigitalocean.app'
    description: Deployed Base URL for the API

tags:
  - name: steam
    description: Steam endpoints
  - name: standard
    description: Standard Routes
  - name: image
    description: Images
  - name: playstation
    description: Playstation Endpoints
  - name: astronomy
    description: Astronomy Endpoints
  - name: anilist
    description: Anilist Endpoints

paths:

  /steam/{id}/summary:
    summary: Steam Recently Played SVG
    get:
      operationId: steam-summary-svg
      description: Fetch steam recently played
      tags: [steam]
      parameters:
        - name: id
          in: path
          description: Steam player id
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: color
          in: query
          description: background color
          required: false
          schema:
            type: string
            minLength: 1
            maxLength: 64
      responses:
        '200':
          description: Player recent played retrieved successfully
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            image/svg+xml:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: bad request

        '404':
          description: not found
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: not found

        '500':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example: Unable to Handle Request

        '429':
          description: Rate Limiting
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
            Retry-After:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: 'You have exceeded number of requests, Try again later!'

  /psn/{id}/summary:
    summary: PSN Played SVG
    get:
      operationId: psn-summary-svg
      description: Fetch psn recently played
      tags: [playstation, image]
      parameters:
        - name: id
          in: path
          description: PSN player account name
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: color
          in: query
          description: background color
          required: false
          schema:
            type: string
            minLength: 1
            maxLength: 64
      responses:
        '200':
          description: Player played retrieved successfully
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            image/svg+xml:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: bad request

        '404':
          description: not found
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: not found

        '500':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example: Unable to Handle Request

        '429':
          description: Rate Limiting
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
            Retry-After:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: 'You have exceeded number of requests, Try again later!'

  /catto:
    summary: Random Cat Images
    get:
      operationId: get-cat-images
      description: Fetch Cat Images
      tags: [image]
      responses:
        '200':
          description: Cat image retrieved successfully
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            image/jpeg:
              schema:
                type: string
                format: binary

        '400':
          description: Bad Request
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: bad request

        '500':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example: Unable to Handle Request

        '429':
          description: Rate Limiting
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
            Retry-After:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: 'You have exceeded number of requests, Try again later!'

  /doggo:
    summary: Random Dog Images
    get:
      operationId: get-dog-images
      description: Fetch Dog Images
      tags: [image]
      responses:
        '200':
          description: Dog image retrieved successfully
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            image/jpeg:
              schema:
                type: string
                format: binary

        '400':
          description: Bad Request
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: bad request

        '500':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example: Unable to Handle Request

        '429':
          description: Rate Limiting
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
            Retry-After:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: 'You have exceeded number of requests, Try again later!'

  /health:
    summary: API health
    get:
      operationId: health
      tags: [standard]
      description: Get health status
      responses:
        '200':
          description: health status retrieved
          headers:
            RateLimit-Limit:
              description: Total number of tries possible
              required: true
              schema:
                type: number
                minimum: 1
                maximum: 1000
            RateLimit-Remaining:
              description: Remaining number of tries possible
              required: true
              schema:
                type: number
                minimum: 0
                maximum: 1000
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                enum: ['up', 'down']

        '400':
          description: Bad Request
          headers:
            RateLimit-Limit:
              description: Total number of tries possible
              required: true
              schema:
                type: number
                minimum: 1
                maximum: 1000
            RateLimit-Remaining:
              description: Remaining number of tries possible
              required: true
              schema:
                type: number
                minimum: 0
                maximum: 1000
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: bad request

        '429':
          description: Rate Limiting
          headers:
            RateLimit-Limit:
              description: Total number of tries possible
              required: true
              schema:
                type: number
                minimum: 1
                maximum: 1000
            RateLimit-Remaining:
              description: Remaining number of tries possible
              required: true
              schema:
                type: number
                minimum: 0
                maximum: 1000
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
            Retry-After:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: 'You have exceeded number of requests, Try again later!'

        '500':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example: Unable to Handle Request

  /version:
    summary: API health
    get:
      operationId: version
      tags: [standard]
      description: Get version
      responses:
        '200':
          description: version retrieved
          headers:
            RateLimit-Limit:
              description: Total number of tries possible
              required: true
              schema:
                type: number
                minimum: 1
                maximum: 1000
            RateLimit-Remaining:
              description: Remaining number of tries possible
              required: true
              schema:
                type: number
                minimum: 0
                maximum: 1000
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                pattern: ^[0-9]+\.[0-9]+\.[0-9]+$
                example: 1.0.0

        '400':
          description: Bad Request
          headers:
            RateLimit-Limit:
              description: Total number of tries possible
              required: true
              schema:
                type: number
                minimum: 1
                maximum: 1000
            RateLimit-Remaining:
              description: Remaining number of tries possible
              required: true
              schema:
                type: number
                minimum: 0
                maximum: 1000
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: bad request

        '429':
          description: Rate Limiting
          headers:
            RateLimit-Limit:
              description: Total number of tries possible
              required: true
              schema:
                type: number
                minimum: 1
                maximum: 1000
            RateLimit-Remaining:
              description: Remaining number of tries possible
              required: true
              schema:
                type: number
                minimum: 0
                maximum: 1000
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
            Retry-After:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: 'You have exceeded number of requests, Try again later!'

        '500':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example: Unable to Handle Request

  /moon-phase:
    summary: Moon Image Summary
    get:
      operationId: get-moon-phase
      tags: [astronomy, image]
      description: Get Moon Phase SVG
      parameters:
        - name: lat
          in: query
          description: Latitude
          required: false
          schema:
            type: string
            pattern: ^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?)$
            default: '17.387140'
        - name: long
          in: query
          description: Longitude
          required: false
          schema:
            type: string
            pattern: ^[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$
            default: '78.491684'
        - name: date
          in: query
          description: date
          required: false
          schema:
            type: string
            pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}$
          example: '2023-07-12'

      responses:
        '200':
          description: Successfully retrieved the moon phase
          headers:
            RateLimit-Limit:
              description: Total number of tries possible
              required: true
              schema:
                type: number
                minimum: 1
                maximum: 1000
            RateLimit-Remaining:
              description: Remaining number of tries possible
              required: true
              schema:
                type: number
                minimum: 0
                maximum: 1000
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            image/jpeg:
              schema:
                type: string
                format: binary

        '400':
          description: Bad Request
          headers:
            RateLimit-Limit:
              description: Total number of tries possible
              required: true
              schema:
                type: number
                minimum: 1
                maximum: 1000
            RateLimit-Remaining:
              description: Remaining number of tries possible
              required: true
              schema:
                type: number
                minimum: 0
                maximum: 1000
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: bad request

        '429':
          description: Rate Limiting
          headers:
            RateLimit-Limit:
              description: Total number of tries possible
              required: true
              schema:
                type: number
                minimum: 1
                maximum: 1000
            RateLimit-Remaining:
              description: Remaining number of tries possible
              required: true
              schema:
                type: number
                minimum: 0
                maximum: 1000
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
            Retry-After:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: 'You have exceeded number of requests, Try again later!'

        '500':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example: Unable to Handle Request


  /anilist-manga/{id}/recent:
    summary: Steam Recently Played SVG
    get:
      operationId: anilist-anime-svg
      description: Fetch recently read manga from anilist as svg
      tags: [anilist]
      parameters:
        - name: id
          in: path
          description: anilist id
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: color
          in: query
          description: background color
          required: false
          schema:
            type: string
            minLength: 1
            maxLength: 64
      responses:
        '200':
          description: Player recent played retrieved successfully
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            image/svg+xml:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: bad request

        '404':
          description: not found
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: not found

        '500':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example: Unable to Handle Request

        '429':
          description: Rate Limiting
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/RateLimit-Limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/RateLimit-Remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/RateLimit-Reset'
            Retry-After:
              $ref: '#/components/headers/RateLimit-Reset'
          content:
            application/json:
              schema:
                type: string
                example: 'You have exceeded number of requests, Try again later!'            

components:
  headers:
    RateLimit-Limit:
      description: Total number of tries possible
      required: true
      schema:
        type: number
        minimum: 1
        maximum: 50
    RateLimit-Remaining:
      description: Remaining number of tries possible
      required: true
      schema:
        type: number
        minimum: 0
        maximum: 50
    RateLimit-Reset:
      description: Time in seconds before rate limiting resets
      required: true
      schema:
        type: number
        minimum: 0
        maximum: 3600